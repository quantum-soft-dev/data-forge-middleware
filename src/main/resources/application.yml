spring:
  application:
    name: data-forge-middleware

  threads:
    virtual:
      enabled: true

  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/dfm}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        show_sql: false
        jdbc:
          time_zone: UTC
    open-in-view: false

  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    schemas: public

  servlet:
    multipart:
      max-file-size: 128MB
      max-request-size: 130MB
      enabled: true

# S3 Configuration
s3:
  endpoint: ${S3_ENDPOINT:https://s3.amazonaws.com}
  region: ${S3_REGION:us-east-1}
  bucket-name: ${S3_BUCKET_NAME:data-forge-bucket}
  access-key: ${S3_ACCESS_KEY:}
  secret-key: ${S3_SECRET_KEY:}
  path-style-access-enabled: false

# Batch Configuration
batch:
  timeout:
    minutes: ${BATCH_TIMEOUT_MINUTES:60}
  max:
    active:
      per-account: ${BATCH_MAX_ACTIVE_PER_ACCOUNT:10}

# Upload Configuration
upload:
  max:
    file-size-mb: ${UPLOAD_MAX_FILE_SIZE_MB:128}
    files-per-batch: ${UPLOAD_MAX_FILES_PER_BATCH:1000}
  retry:
    attempts: 3
    delay-ms: 1000

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:change-this-secret-in-production-to-a-secure-random-value-at-least-256-bits}
  expiration-seconds: 86400

# Keycloak Configuration
keycloak:
  realm: ${KEYCLOAK_REALM:dfm}
  auth-server-url: ${KEYCLOAK_AUTH_SERVER_URL:http://localhost:8081}
  resource: ${KEYCLOAK_RESOURCE:dfm-backend}
  credentials:
    secret: ${KEYCLOAK_CLIENT_SECRET:}
  use-resource-role-mappings: false
  bearer-only: true

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
      probes:
        enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}

# Logging Configuration
logging:
  level:
    root: INFO
    com.bitbi.dfm: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.hibernate.SQL: WARN
    org.flywaydb: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
